// <auto-generated />
using System;
using API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250127012651_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.Plant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdealLightExposure")
                        .HasColumnType("integer")
                        .HasColumnName("ideal_light_exposure");

                    b.Property<int>("IdealMoisturePercentage")
                        .HasColumnType("integer")
                        .HasColumnName("ideal_moisture_percentage");

                    b.Property<int>("IdealTemperatureCelsius")
                        .HasColumnType("integer")
                        .HasColumnName("ideal_temperature_celsius");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("plants");
                });

            modelBuilder.Entity("API.Entities.PlantReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("Light")
                        .HasColumnType("integer")
                        .HasColumnName("light");

                    b.Property<int>("Moisture")
                        .HasColumnType("integer")
                        .HasColumnName("moisture");

                    b.Property<int>("TemperatureCelsius")
                        .HasColumnType("integer")
                        .HasColumnName("temperature");

                    b.HasKey("Id");

                    b.ToTable("plant_readings");
                });

            modelBuilder.Entity("API.Entities.Sensor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("sensors");
                });

            modelBuilder.Entity("API.Entities.WaterReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Moisture")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("water_readings");
                });

            modelBuilder.Entity("API.Entities.Sensor", b =>
                {
                    b.HasOne("API.Entities.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });
#pragma warning restore 612, 618
        }
    }
}
